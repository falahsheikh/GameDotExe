package com.thelocalmarketplace.software;

import org.junit.Before;
import org.junit.Test;

public class WeightDiscrepancyTest {

    private WeightDiscrepancy weightDiscrepancy;
    private SelfCheckoutStation scsMock;
    private ElectronicScale scaleMock;

    @Before
    public void setup() {
        scsMock = mock(SelfCheckoutStation.class);
        scaleMock = mock(ElectronicScale.class);
        when(scsMock.getBaggingArea()).thenReturn(scaleMock);

        weightDiscrepancy = new WeightDiscrepancy(scsMock);
        weightDiscrepancy.start(scsMock);
    }

    @Test
    public void testWeightDiscrepancyPrintsMessages() {
        weightDiscrepancy.weightDiscrepancy();

        assertTrue(systemOut().contains("Weight Discrepancy"));
        assertTrue(systemOut().contains("Please solve the problem or call an attendant"));
        assertTrue(systemOut().contains("Customer Weight Discrepancy"));
        assertTrue(systemOut().contains("Check on the customer unless the problem is solved"));
    }

    @Test
    public void testWeightDiscrepancyWithDifferentScaleInstance() {
        ElectronicScale anotherScaleMock = mock(ElectronicScale.class);
        when(scsMock.getBaggingArea()).thenReturn(anotherScaleMock);

        weightDiscrepancy.weightDiscrepancy();

        assertTrue(systemOut().contains("Weight Discrepancy"));
        assertTrue(systemOut().contains("Please solve the problem or call an attendant"));
        assertTrue(systemOut().contains("Customer Weight Discrepancy"));
        assertTrue(systemOut().contains("Check on the customer unless the problem is solved"));
    }

    @Test
    public void testWeightDiscrepancyWithNullScale() {
        when(scsMock.getBaggingArea()).thenReturn(null);

        weightDiscrepancy.weightDiscrepancy();

        assertTrue(systemOut().contains("Weight Discrepancy"));
        assertTrue(systemOut
